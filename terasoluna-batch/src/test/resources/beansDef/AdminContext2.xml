<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
              http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
              http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd
              http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <import resource="AdminContext.xml"/>
    <context:component-scan base-package="jp.terasoluna.fw.batch.async" annotation-config="true"/>
    <context:property-placeholder location="classpath:/appprops/batch.properties" order="1" ignore-unresolvable="true" />
    <task:executor id="threadPoolTaskExecutor" pool-size="${batchTaskExecutor.maxPoolSize}"  />

    <bean id="beanMapper" class="org.dozer.spring.DozerBeanMapperFactoryBean"
          p:mappingFiles="classpath*:/META-INF/**/*-mapping.xml"/>

    <!-- DB接続リトライを行うインターセプタ-->
    <bean id="connectionRetryInterceptor" class="jp.terasoluna.fw.batch.async.aop.ConnectionRetryInterceptor" />
    <aop:config>
        <aop:pointcut id="connectionRetryPointcut"
          expression="execution(* jp.terasoluna.fw.batch.async.repository.BatchStatusChanger.*(..)) ||
                      execution(* jp.terasoluna.fw.batch.async.repository.BatchJobDataResolver.*(..))"/>
        <aop:advisor advice-ref="connectionRetryInterceptor" pointcut-ref="connectionRetryPointcut"/>
    </aop:config>

    <!-- スレッドグループの生成とMessageAccessorをスレッドグループに紐づくMessageUtilに設定するためのインターセプタ-->
    <bean id="threadGroupManagementInterceptor" class="jp.terasoluna.fw.batch.executor.ThreadGroupManagementInterceptor" />
    <aop:config>
        <aop:pointcut id="threadGroupManagementPointcut"
          expression="execution(*  jp.terasoluna.fw.batch.async.controller.TaskExecutorDelegate.execute(..)) ||
                      execution(* jp.terasoluna.fw.batch.async.worker.BLogicExecutor.execute(..)) ||
                      execution(* jp.terasoluna.fw.batch.executor.concurrent.BatchServant.run(..))" />
        <aop:advisor advice-ref="threadGroupManagementInterceptor" pointcut-ref="threadGroupManagementPointcut"/>
    </aop:config>

    <!-- 既存のBatchServantを利用してビジネスロジックを実行する。
    <bean id="taskInvoker" class="jp.terasoluna.fw.batch.async.controller.BatchServantTaskInvoker"/>
     -->
</beans>
